<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>12, 24</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAADB1AAAwdQAAAAAAAAAA
        AAAAAAAEAAAAAwAAAAAAAAAAAAAAAAAAAAMAAAAFAAAAAQAAAAAAAAAAAAAAAAAAAAQAAAAFAAAAAAAA
        AAAAAAAAAAAAAQAAAAUAAAABAAAAAAAAAAAAAAAAAAAAAwAAAAYAAAABAAAAAAAAAAAAAAABAAAABQAA
        AAQAAAAAAAAAAAAAAAIAAAAIAAAABAAAAAAAAAAAAAAAAAAAABAAAAAmAAAALAAAACoAAAAeAAAADwAA
        AAgAAAACAAAAAAAAAAAAAAAGAAAAGgAAAC0AAAAsAAAAIwAAABMAAAAEAAAAAwAAAAUAAAABAAAAAAAA
        AAAAAAACAAAACAAAAAUAAAAAAAAAAAAAAAMAAAAJAAAAAgAAACEAAAB2BAgOvgsWJuIOHDDrDBos6gkT
        IN8FChHHAQIEnQAAAGMAAAA6AAAAcAIEB7AHDxrWDBgq5wkTIOsDBgnlBg0W0QIDBqgAAABlAAAAJQAA
        AAYAAAAAAAAAAAAAAAAAAAACAAAACAAAAAQAAAAAAAAAAAAAAAcAAABhBg4Y1hw5Yv4wY6j/OXfK/zt6
        z/85dsn/OHTF/zNqs/8gQnD/AwcM+wgQG/EbN1v9L16b/zt1wP9AgNL/M2is/w8fNP8vYqb/KVeU/xgy
        Vf0HDxnYAAAAegAAABkAAAAAAAAAAAAAAAAAAAACAAAABgAAAAAAAAAEAAAAchMkNvI7b6v/UZfn/1ae
        7/9Umuz/R4zm/z+C3v8/g97/MGWr/xMmP/8kQ2b/R4LF/1WZ5f9aoO3/XaTx/12l8f9Skdf/Fyo//0J9
        xP9Hjej/QITg/zNqtP8XMFL8AwYKugAAADEAAAAAAAAAAAAAAAAAAAABAAAAAQAAAFYVJTbxUIzL/1+m
        8f9coej/XqTt/2Cn8P9Ynu3/Q4jl/yxcnv8RITP/PWqZ/12j7f9gqPP/X6bv/1yh6P9do+v/YKfx/1aW
        2f8vUXb/WJre/1me5/9Sl+j/Rozn/z6B2/8kSn7/Bw4XyQMGCR0GDBQAAAAAAAAAAAAAAAAjCQ8WzkZ6
        sP9hqfT/X6bw/16k7f9coOj/XqTt/1yj8P86dcL/EiM5/0Bwof9do+v/X6bv/1+m8P9fpvD/XqXv/1yh
        6P9douv/X6Xv/16j7P9fpvD/XqTs/1yh6P9Zn+v/SpDn/z+E4P80bLj4MmevewEBAh4AAAAAAAAAAAAA
        AHckP1v8XKDo/1+m8P9fpvD/X6bw/16k7f9coej/U5jo/x4/av8tTnH/X6fx/12j6/9coej/X6Xv/1+m
        8P9fpvD/XqXv/1yh6P9douv/X6bw/1+m8P9fpvD/XqTs/1yh6P9boez/S5Hn/0GI5/80bLj5Bw8aywAA
        ADQAAAAABAYJxkFypP9epO3/XKLq/1+m8P9fpvD/X6bw/16k7v9Dgc3/EyY+/02Gwf9gqPP/X6bw/12i
        6/9coej/X6Xv/1+m8P9fpvD/XqXv/1yh6P9douv/X6bw/1+m8P9fpvD/XqTs/1yh6P9couz/S5Hn/z+E
        4P8lTYL/AwYKugAAABkMFB3wUIzL/2Cn8f9coen/XKLq/1+m8P9fpvD/XqXy/zpyuv8XKkD/WJnd/1+n
        8f9fpvD/X6bw/12i6/9coej/X6Xv/1+m8P9fpvD/XqXv/1yh6P9douv/X6bw/1+m8P9fpvD/XqTs/1yh
        6P9couz/SpDn/z6B2/8WLk76AAAAchAcKP1VlNf/YKfy/1+l7/9coen/XKLq/1+m8P9dpfL/N261/xku
        RP9Xmdz/XqTt/1+m8P9fpvD/X6bw/12i6/9coej/X6Xv/1+m8P9fpvD/XqXv/1yh6P9douv/X6bw/1+m
        8P9epe//XKLq/1yh6P9Zn+v/Rozo/yxbmv8CBQjHDhkk+VOR0v9gp/L/X6bw/1+l7/9coen/XaLq/16l
        8f8+ecX/Fig//1ST1f9coen/XqXv/1+n8f9fpvD/X6bw/12i6/9coej/X6Xv/1+m8P9gp/H/YKfx/1yh
        6P9douv/Yan0/0Z7sv84Yo7/XqTt/1yh6P9Plen/N3HB/wgRHfIIDxXkSoG7/1+n8f9fpvD/X6bw/1+l
        7/9do+v/XaPs/0qO3/8VK0n/QnOm/2Cn8v9Pisf/WZvh/1+m8f9fpvD/X6bw/12i6/9coej/X6bw/1aW
        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
        ABzCAAGOYQABxzCAAGMYQAwxjDAGOMY44xw=
</value>
  </data>
</root>